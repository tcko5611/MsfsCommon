/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tw.com.hasco.MSFS.ui;

import javax.swing.JFrame;
import javax.swing.JPanel;
import tw.com.hasco.MSFS.FS.FSBasic;
import tw.com.hasco.MSFS.locale.LocaleManager;

/**
 *
 * @author ktc
 */
public class CtrlPanel extends javax.swing.JPanel {

    /**
     * Creates new form PlanePanel
     */
    public CtrlPanel() {
        initComponents();
        setLabelsTest();

    }

    private void setLabelsTest() {
        this.throttleLevelLabel.setText(LocaleManager.getInstance().getString("throttleLevel"));
        this.engineRPMLabel.setText(LocaleManager.getInstance().getString("engineRPM"));
        this.propLevelLabel.setText(LocaleManager.getInstance().getString("propLevel"));
        this.propRPMLabel.setText(LocaleManager.getInstance().getString("propRPM"));
        this.mixtureLevelLabel.setText(LocaleManager.getInstance().getString("mixtureLevel"));
        this.torqueLabel.setText(LocaleManager.getInstance().getString("torque"));
        this.elevatorControlLabel.setText(LocaleManager.getInstance().getString("elevatorControl"));
        this.elevatorDeflectionLabel.setText(LocaleManager.getInstance().getString("elevatorDeflection"));
        this.aileronControlLabel.setText(LocaleManager.getInstance().getString("aileronControl"));
        this.aileronDeflectionLabel.setText(LocaleManager.getInstance().getString("aileronDeflection"));
        this.rudderControlLabel.setText(LocaleManager.getInstance().getString("rudderControl"));
        this.rudderDeflectionLabel.setText(LocaleManager.getInstance().getString("rudderDeflection"));
        this.flapsControlLabel.setText(LocaleManager.getInstance().getString("flapsControl"));
        this.flapsDeflectionLabel.setText(LocaleManager.getInstance().getString("flapsDeflection"));
        this.gearControlLabel.setText(LocaleManager.getInstance().getString("gearControl"));
        this.gearPositionLabel.setText(LocaleManager.getInstance().getString("gearPosition"));
        this.elevatorTrimControlLabel.setText(LocaleManager.getInstance().getString("elevatorTrimControl"));
        this.aileronTrimControlLabel.setText(LocaleManager.getInstance().getString("aileronTrimControl"));
        this.rudderTrimControlLabel.setText(LocaleManager.getInstance().getString("rudderTrimControl"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        throttleLevelLabel = new javax.swing.JLabel();
        propLevelLabel = new javax.swing.JLabel();
        mixtureLevelLabel = new javax.swing.JLabel();
        elevatorControlLabel = new javax.swing.JLabel();
        aileronControlLabel = new javax.swing.JLabel();
        rudderControlLabel = new javax.swing.JLabel();
        flapsControlLabel = new javax.swing.JLabel();
        gearControlLabel = new javax.swing.JLabel();
        elevatorTrimControlLabel = new javax.swing.JLabel();
        throttleLevelTextField = new javax.swing.JTextField();
        propLevelTextField = new javax.swing.JTextField();
        mixtureLevelTextField = new javax.swing.JTextField();
        elevatorControlTextField = new javax.swing.JTextField();
        aileronControlTextField = new javax.swing.JTextField();
        rudderControlTextField = new javax.swing.JTextField();
        flapsControlTextField = new javax.swing.JTextField();
        gearControlTextField = new javax.swing.JTextField();
        elevatorTrimControlTextField = new javax.swing.JTextField();
        aileronTrimControlLabel = new javax.swing.JLabel();
        aileronTrimControlTextField = new javax.swing.JTextField();
        rudderTrimControlLabel = new javax.swing.JLabel();
        rudderTrimControlTextField = new javax.swing.JTextField();
        gearPositionLabel = new javax.swing.JLabel();
        gearPositionTextField = new javax.swing.JTextField();
        flapsDeflectionTextField = new javax.swing.JTextField();
        flapsDeflectionLabel = new javax.swing.JLabel();
        rudderDeflectionLabel = new javax.swing.JLabel();
        rudderDeflectionTextField = new javax.swing.JTextField();
        aileronDeflectionTextField = new javax.swing.JTextField();
        aileronDeflectionLabel = new javax.swing.JLabel();
        elevatorDeflectionLabel = new javax.swing.JLabel();
        elevatorDeflectionTextField = new javax.swing.JTextField();
        torqueTextField = new javax.swing.JTextField();
        torqueLabel = new javax.swing.JLabel();
        propRPMLabel = new javax.swing.JLabel();
        propRPMTextField = new javax.swing.JTextField();
        engineRPMTextField = new javax.swing.JTextField();
        engineRPMLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        throttleLevelLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        throttleLevelLabel.setText("節流閥操控 T");

        propLevelLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        propLevelLabel.setText("螺旋槳操控 P");

        mixtureLevelLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        mixtureLevelLabel.setText("混合比操控 M");

        elevatorControlLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        elevatorControlLabel.setText("昇降舵操控 E");

        aileronControlLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        aileronControlLabel.setText("副翼操控 A");
        aileronControlLabel.setMaximumSize(new java.awt.Dimension(84, 22));
        aileronControlLabel.setMinimumSize(new java.awt.Dimension(84, 22));
        aileronControlLabel.setPreferredSize(new java.awt.Dimension(84, 22));

        rudderControlLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        rudderControlLabel.setText("方向舵操控 R");

        flapsControlLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        flapsControlLabel.setText("襟翼操控 F");
        flapsControlLabel.setMaximumSize(new java.awt.Dimension(84, 22));
        flapsControlLabel.setMinimumSize(new java.awt.Dimension(84, 22));
        flapsControlLabel.setPreferredSize(new java.awt.Dimension(84, 22));

        gearControlLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        gearControlLabel.setText("起落架操控 G");

        elevatorTrimControlLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        elevatorTrimControlLabel.setText("昇降舵");

        throttleLevelTextField.setEditable(false);
        throttleLevelTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        throttleLevelTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        throttleLevelTextField.setToolTipText("");

        propLevelTextField.setEditable(false);
        propLevelTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        propLevelTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        propLevelTextField.setToolTipText("");

        mixtureLevelTextField.setEditable(false);
        mixtureLevelTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        mixtureLevelTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        mixtureLevelTextField.setToolTipText("");

        elevatorControlTextField.setEditable(false);
        elevatorControlTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        elevatorControlTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        elevatorControlTextField.setToolTipText("");

        aileronControlTextField.setEditable(false);
        aileronControlTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        aileronControlTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aileronControlTextField.setToolTipText("");

        rudderControlTextField.setEditable(false);
        rudderControlTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        rudderControlTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        rudderControlTextField.setToolTipText("");

        flapsControlTextField.setEditable(false);
        flapsControlTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        flapsControlTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        flapsControlTextField.setToolTipText("");

        gearControlTextField.setEditable(false);
        gearControlTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        gearControlTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gearControlTextField.setToolTipText("");

        elevatorTrimControlTextField.setEditable(false);
        elevatorTrimControlTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        elevatorTrimControlTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        elevatorTrimControlTextField.setToolTipText("");

        aileronTrimControlLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        aileronTrimControlLabel.setText("副翼 A");

        aileronTrimControlTextField.setEditable(false);
        aileronTrimControlTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        aileronTrimControlTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aileronTrimControlTextField.setToolTipText("");

        rudderTrimControlLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        rudderTrimControlLabel.setText("方向舵 R");

        rudderTrimControlTextField.setEditable(false);
        rudderTrimControlTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        rudderTrimControlTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        rudderTrimControlTextField.setToolTipText("");

        gearPositionLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        gearPositionLabel.setText("起落架位置");
        gearPositionLabel.setMaximumSize(new java.awt.Dimension(84, 22));
        gearPositionLabel.setMinimumSize(new java.awt.Dimension(84, 22));
        gearPositionLabel.setPreferredSize(new java.awt.Dimension(84, 22));

        gearPositionTextField.setEditable(false);
        gearPositionTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        gearPositionTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gearPositionTextField.setToolTipText("");

        flapsDeflectionTextField.setEditable(false);
        flapsDeflectionTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        flapsDeflectionTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        flapsDeflectionTextField.setToolTipText("");

        flapsDeflectionLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        flapsDeflectionLabel.setText("襟翼位置");
        flapsDeflectionLabel.setMaximumSize(new java.awt.Dimension(84, 22));
        flapsDeflectionLabel.setMinimumSize(new java.awt.Dimension(84, 22));
        flapsDeflectionLabel.setPreferredSize(new java.awt.Dimension(84, 22));

        rudderDeflectionLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        rudderDeflectionLabel.setText("方向舵位置");
        rudderDeflectionLabel.setMaximumSize(new java.awt.Dimension(84, 22));
        rudderDeflectionLabel.setMinimumSize(new java.awt.Dimension(84, 22));
        rudderDeflectionLabel.setPreferredSize(new java.awt.Dimension(84, 22));

        rudderDeflectionTextField.setEditable(false);
        rudderDeflectionTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        rudderDeflectionTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        rudderDeflectionTextField.setToolTipText("");

        aileronDeflectionTextField.setEditable(false);
        aileronDeflectionTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        aileronDeflectionTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aileronDeflectionTextField.setToolTipText("");

        aileronDeflectionLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        aileronDeflectionLabel.setText("副翼位置");
        aileronDeflectionLabel.setMaximumSize(new java.awt.Dimension(84, 22));
        aileronDeflectionLabel.setMinimumSize(new java.awt.Dimension(84, 22));
        aileronDeflectionLabel.setPreferredSize(new java.awt.Dimension(84, 22));

        elevatorDeflectionLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        elevatorDeflectionLabel.setText("昇降舵位置");
        elevatorDeflectionLabel.setMaximumSize(new java.awt.Dimension(84, 22));
        elevatorDeflectionLabel.setMinimumSize(new java.awt.Dimension(84, 22));
        elevatorDeflectionLabel.setPreferredSize(new java.awt.Dimension(84, 22));

        elevatorDeflectionTextField.setEditable(false);
        elevatorDeflectionTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        elevatorDeflectionTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        elevatorDeflectionTextField.setToolTipText("");

        torqueTextField.setEditable(false);
        torqueTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        torqueTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        torqueTextField.setToolTipText("");

        torqueLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        torqueLabel.setText("扭力輸出 TQE");

        propRPMLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        propRPMLabel.setText("旋槳轉數 RPM");

        propRPMTextField.setEditable(false);
        propRPMTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        propRPMTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        propRPMTextField.setToolTipText("");

        engineRPMTextField.setEditable(false);
        engineRPMTextField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        engineRPMTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        engineRPMTextField.setToolTipText("");

        engineRPMLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        engineRPMLabel.setText("引擎轉數 N1");

        jLabel1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel1.setText("配平:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(throttleLevelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addComponent(propLevelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addComponent(mixtureLevelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addComponent(elevatorControlLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addComponent(aileronControlLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addComponent(rudderControlLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addComponent(flapsControlLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addComponent(gearControlLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(elevatorTrimControlLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(elevatorTrimControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(aileronTrimControlLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(aileronTrimControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rudderTrimControlLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rudderTrimControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(gearControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gearPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gearPositionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(throttleLevelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(engineRPMLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(engineRPMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(propLevelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(propRPMLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(propRPMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mixtureLevelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(torqueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(torqueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(elevatorControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elevatorDeflectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elevatorDeflectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(aileronControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(aileronDeflectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(aileronDeflectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rudderControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rudderDeflectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rudderDeflectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(flapsControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(flapsDeflectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(flapsDeflectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(throttleLevelLabel)
                    .addComponent(engineRPMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(throttleLevelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(engineRPMLabel))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(propRPMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(propLevelLabel)
                    .addComponent(propLevelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(propRPMLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(torqueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mixtureLevelLabel)
                    .addComponent(mixtureLevelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(torqueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elevatorDeflectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elevatorControlLabel)
                    .addComponent(elevatorControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elevatorDeflectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aileronControlLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aileronDeflectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aileronControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aileronDeflectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rudderControlLabel)
                    .addComponent(rudderDeflectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rudderControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rudderDeflectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flapsControlLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flapsDeflectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flapsControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flapsDeflectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gearControlLabel)
                    .addComponent(gearPositionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gearControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gearPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elevatorTrimControlLabel)
                    .addComponent(elevatorTrimControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aileronTrimControlLabel)
                    .addComponent(aileronTrimControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rudderTrimControlLabel)
                    .addComponent(rudderTrimControlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aileronControlLabel;
    private javax.swing.JTextField aileronControlTextField;
    private javax.swing.JLabel aileronDeflectionLabel;
    private javax.swing.JTextField aileronDeflectionTextField;
    private javax.swing.JLabel aileronTrimControlLabel;
    private javax.swing.JTextField aileronTrimControlTextField;
    private javax.swing.JLabel elevatorControlLabel;
    private javax.swing.JTextField elevatorControlTextField;
    private javax.swing.JLabel elevatorDeflectionLabel;
    private javax.swing.JTextField elevatorDeflectionTextField;
    private javax.swing.JLabel elevatorTrimControlLabel;
    private javax.swing.JTextField elevatorTrimControlTextField;
    private javax.swing.JLabel engineRPMLabel;
    private javax.swing.JTextField engineRPMTextField;
    private javax.swing.JLabel flapsControlLabel;
    private javax.swing.JTextField flapsControlTextField;
    private javax.swing.JLabel flapsDeflectionLabel;
    private javax.swing.JTextField flapsDeflectionTextField;
    private javax.swing.JLabel gearControlLabel;
    private javax.swing.JTextField gearControlTextField;
    private javax.swing.JLabel gearPositionLabel;
    private javax.swing.JTextField gearPositionTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel mixtureLevelLabel;
    private javax.swing.JTextField mixtureLevelTextField;
    private javax.swing.JLabel propLevelLabel;
    private javax.swing.JTextField propLevelTextField;
    private javax.swing.JLabel propRPMLabel;
    private javax.swing.JTextField propRPMTextField;
    private javax.swing.JLabel rudderControlLabel;
    private javax.swing.JTextField rudderControlTextField;
    private javax.swing.JLabel rudderDeflectionLabel;
    private javax.swing.JTextField rudderDeflectionTextField;
    private javax.swing.JLabel rudderTrimControlLabel;
    private javax.swing.JTextField rudderTrimControlTextField;
    private javax.swing.JLabel throttleLevelLabel;
    private javax.swing.JTextField throttleLevelTextField;
    private javax.swing.JLabel torqueLabel;
    private javax.swing.JTextField torqueTextField;
    // End of variables declaration//GEN-END:variables

    public void update(FSBasic fsBasic) {
        //更新飛行員操控資料
        // 節流閥操控
        throttleLevelTextField.setText(fsBasic.getThrottleLevel());
        // 螺旋槳操控
        propLevelTextField.setText(fsBasic.getPropLevel());
        // 混合比操控
        mixtureLevelTextField.setText(fsBasic.getMixtureLevel());
        // 引擎轉數
        engineRPMTextField.setText(fsBasic.getEngineRPM());
        // 螺旋槳轉數
        propRPMTextField.setText(fsBasic.getPropRPM());
        // 扭力輸出
        torqueTextField.setText(fsBasic.getTorque());
        // 襟翼操控
        flapsControlTextField.setText(fsBasic.getFlapsControl());
        // 襟翼角度
        flapsDeflectionTextField.setText(fsBasic.getFlapsDeflection());
        // 起落架操控
        gearControlTextField.setText(fsBasic.getGearControl());
        // 起落架位置
        gearPositionTextField.setText(fsBasic.getGearPosition());
        // 升降舵操控
        elevatorControlTextField.setText(fsBasic.getElevatorControl());
        // 升降舵角度
        elevatorDeflectionTextField.setText(fsBasic.getElevatorDeflection());
        // 副翼操控
        aileronControlTextField.setText(fsBasic.getAileronControl());
        // 副翼角度
        aileronDeflectionTextField.setText(fsBasic.getAileronDeflection());
        // 方向舵操控
        rudderControlTextField.setText(fsBasic.getRudderControl());
        // 方向舵角度
        rudderDeflectionTextField.setText(fsBasic.getRudderDeflection());
        // 升降舵配平
        elevatorTrimControlTextField.setText(fsBasic.getElevatorTrimControl());
        // 副翼配平
        aileronTrimControlTextField.setText(fsBasic.getAileronTrimControl());
        // 方向舵配平
        rudderTrimControlTextField.setText(fsBasic.getRudderTrimControl());
    }

    public static void main(String[] args) throws InterruptedException {

        JFrame f = new JFrame("Demo");
        JPanel p = new CtrlPanel();
        f.add(p);

        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setSize(600, 750);
        f.setVisible(true);
    }
}
