/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tw.com.hasco.MSFS.ui;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Stroke;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author DELL
 */
public class DataPanel extends javax.swing.JPanel {

    List<Double> data;
    double min;
    double max;
    double origMin;
    double origMax;
    int w; // panel width
    int h; // panel height

    /**
     * Creates new form DataPanel
     */
    public DataPanel() {
        initComponents();
        data = new ArrayList<>();
    }

    public void setMaxMin(double max, double min) {
        this.max = origMax = max;
        this.min = origMin = min;
    }

    public void clearData() {
        data.clear();
        max = origMax;
        min = origMin;
        repaint();
    }

    public void addData(Double d) {
        data.add(d);
        max = (max >= d) ? max : d;
        min = (min <= d) ? min : d;
        repaint();
    }

    private void drawAxis(Graphics2D g2d) {
        g2d.setColor(Color.white);
        Stroke old = g2d.getStroke();
        // Stroke dashed = new BasicStroke(1, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0, new float[]{9}, 0);
        // g2d.setStroke(dashed);
        int y = h / 2;
        g2d.drawLine(0, y, w, y);
        for (int i = 0; i < 10; ++i) {
            int x = i * w / 10;
            g2d.drawLine(x, 0, x, h);
        }
        g2d.setStroke(old);

    }

    @Override
    public void paintComponent(Graphics g) {

        super.paintComponent(g);

        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(
                RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON
        );
        w = this.getWidth() - 1;
        h = this.getHeight() - 1;
        drawAxis(g2d);
        if (data.size() <= 1) {
            return;
        }
        g2d.setColor(Color.GREEN);
        int x0 = 0;
        int y0 = (int) ((max - data.get(0)) / (max - min) * h);
        for (int i = 1; i < data.size(); ++i) {
            int x = (i + 1) * w / data.size();
            int y = (int) ((max - data.get(i)) / (max - min) * h);
            g2d.drawLine(x0, y0, x, y);
            x0 = x;
            y0 = y;
        }
        x0 = w*9/10;
        y0 = h*2/10;
        g2d.drawString(String.format("%.2f", data.get(data.size()-1)),x0, y0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 204, 102));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 639, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 62, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
