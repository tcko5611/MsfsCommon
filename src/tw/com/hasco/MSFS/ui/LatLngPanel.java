/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tw.com.hasco.MSFS.ui;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author DELL
 */
public class LatLngPanel extends javax.swing.JPanel {

    String fileName;
    BufferedImage pic;

    /**
     * Creates new form LatLngPanel
     */
    public LatLngPanel() {
        initComponents();
    }

    public void setFileName(String name) {
        fileName = name;
        try {
            pic = ImageIO.read(new File(fileName));
            repaint();
        } catch (IOException ex) {
            pic = null;
            Logger.getLogger(LatLngPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 482, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 454, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    @Override
    public void paintComponent(Graphics g) {

        super.paintComponent(g);

        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(
                RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON
        );
        if (pic == null) return;
        double picHeight = pic.getHeight();
        double picWidth = pic.getWidth();
        double width = getWidth();
        double height = getHeight();       
        double scale =Math.min(width/picWidth, height/picHeight);
        AffineTransform at = new AffineTransform();
        // 4. translate it to the center of the component
        // at.translate(width / 2, height / 2);
        // 3. do the actual rotation
        // at.rotate(-1.0 * rot);
        // 2. just a scale because this image is big
        at.scale(scale, scale);
        // 1. translate the object so that you rotate it around the 
        //    center (easier :))
        // at.translate(-planeWidth / 2, -planeHeight / 2);

        // draw the image
        g2d.drawImage(pic, at, null);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
