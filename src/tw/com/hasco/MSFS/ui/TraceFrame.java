/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tw.com.hasco.MSFS.ui;

import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import tw.com.hasco.MSFS.FS.FSBasic;
import tw.com.hasco.MSFS.Observer;
import tw.com.hasco.MSFS.locale.LocaleManager;
import tw.com.hasco.MSFS.network.MsfsUdpObserver;
import tw.com.hasco.MSFS.network.MsfsUdpServer;

/**
 *
 * @author DELL
 */
public class TraceFrame extends javax.swing.JFrame implements Observer, MsfsUdpObserver {

    /**
     * Creates new form PlotTraceFrame
     */
    public TraceFrame() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/draw/h.jpg")));
        this.setTitle(LocaleManager.getInstance("Taiwan").getString("figTrace"));
        // setResizable(false);
        updateWidgetName();
    }
private void updateWidgetName() {
    LocaleManager l = LocaleManager.getInstance("Taiwan");
    this.dynMapCheckBox.setText(l.getString("dynMap"));
    this.smallButton.setText(l.getString("zoomOut"));
    this.bigButton.setText(l.getString("zoomIn"));
    this.clearButton.setText(l.getString("clearData"));
    this.centerButton.setText(l.getString("sure"));
    this.jLabel1.setText(l.getString("figCenter"));
    this.jLabel2.setText(l.getString("latitude"));
    this.jLabel3.setText(l.getString("longitude"));
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        plotTracePanel = new tw.com.hasco.MSFS.ui.TracePanel();
        jPanel1 = new javax.swing.JPanel();
        dynMapCheckBox = new javax.swing.JCheckBox();
        bigButton = new javax.swing.JButton();
        smallButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        latTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lngTextField = new javax.swing.JTextField();
        centerButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        plotTracePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout plotTracePanelLayout = new javax.swing.GroupLayout(plotTracePanel);
        plotTracePanel.setLayout(plotTracePanelLayout);
        plotTracePanelLayout.setHorizontalGroup(
            plotTracePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 412, Short.MAX_VALUE)
        );
        plotTracePanelLayout.setVerticalGroup(
            plotTracePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );

        dynMapCheckBox.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        dynMapCheckBox.setText("動態地圖");
        dynMapCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dynMapCheckBoxItemStateChanged(evt);
            }
        });

        bigButton.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        bigButton.setText("放大");
        bigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bigButtonActionPerformed(evt);
            }
        });

        smallButton.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        smallButton.setText("縮小");
        smallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jLabel1.setText("圖中心點");

        jLabel2.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jLabel2.setText("緯度");

        latTextField.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jLabel3.setText("經度");

        lngTextField.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N

        centerButton.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        centerButton.setText("確定");
        centerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                centerButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        clearButton.setText("清除資料");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dynMapCheckBox)
                    .addComponent(bigButton)
                    .addComponent(smallButton)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(latTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lngTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(centerButton)
                    .addComponent(clearButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dynMapCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bigButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(smallButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(latTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lngTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(centerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(plotTracePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plotTracePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 145, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bigButtonActionPerformed
        // TODO add your handling code here:
        plotTracePanel.zoomin();
    }//GEN-LAST:event_bigButtonActionPerformed

    private void smallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallButtonActionPerformed
        // TODO add your handling code here:
        plotTracePanel.zoomout();
    }//GEN-LAST:event_smallButtonActionPerformed

    private void centerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centerButtonActionPerformed
        // TODO add your handling code here:
        LocaleManager l = LocaleManager.getInstance("Taiwan");
        double lat = Double.parseDouble(latTextField.getText());
        double lng = Double.parseDouble(lngTextField.getText());
        if (lng < -175) {
            JOptionPane.showMessageDialog(this, l.getString("longitude")  + l.getString("tooSmall"), l.getString("longitude"), JOptionPane.WARNING_MESSAGE);
            lngTextField.setText("-175");
            lng = -175;
        }
        if (lng > 175) {
            JOptionPane.showMessageDialog(this, l.getString("longitude")  + l.getString("tooBig"), l.getString("longitude"), JOptionPane.WARNING_MESSAGE);
            lngTextField.setText("175");
            lng = 175;
        }
        if (lat < -85) {
            JOptionPane.showMessageDialog(this, l.getString("latitude")  + l.getString("tooSmall"), l.getString("latitude"), JOptionPane.WARNING_MESSAGE);
            latTextField.setText("-85");
            lat=-85;
        }
        if (lat > 85) {
            JOptionPane.showMessageDialog(this, l.getString("latitude")  + l.getString("tooBig"), l.getString("latitude"), JOptionPane.WARNING_MESSAGE);
            latTextField.setText("85");
            lat= 85;
        }
        this.plotTracePanel.setCenter(lat, lng);
    }//GEN-LAST:event_centerButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clearData();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void dynMapCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dynMapCheckBoxItemStateChanged
        // TODO add your handling code here:
        javax.swing.event.ChangeEvent ev;
        if (evt.getStateChange() == ItemEvent.SELECTED) {//checkbox has been selected
            plotTracePanel.setDynMap(true);
            //do something...
        } else {//checkbox has been deselected
            //do something...
            plotTracePanel.setDynMap(false);
        }
    }//GEN-LAST:event_dynMapCheckBoxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TraceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TraceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TraceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TraceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
LocaleManager l = LocaleManager.getInstance("China");
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TraceFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bigButton;
    private javax.swing.JButton centerButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JCheckBox dynMapCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField latTextField;
    private javax.swing.JTextField lngTextField;
    private tw.com.hasco.MSFS.ui.TracePanel plotTracePanel;
    private javax.swing.JButton smallButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(FSBasic fsBasic) {
        plotTracePanel.update(fsBasic);
    }

    public void clearData() {
        plotTracePanel.clearData();
    }

    @Override
    public void update(MsfsUdpServer p) {
        plotTracePanel.update(p);
    }
}
